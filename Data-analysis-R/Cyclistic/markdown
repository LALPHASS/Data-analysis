---
title: "Cyclistic"
author: "Diarra Hamadoun"
date: "2023-05-20"
output:
  pdf_document: default
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Cyclistic data analysis markdown

**Cyclistic** is a bike share company in Chicago. In this tagging, we'll see the company's data analysis to help it maximize annual membership. 

- Load the data
```{r li, message=FALSE, warning=FALSE}
library(readr)
```

```{r load, message=FALSE, warning=FALSE, paged.print=FALSE}

data_2020_04 <- read_delim("202004-divvy-tripdata/202004-divvy-tripdata.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data_2020_05 <- read_delim("202005-divvy-tripdata/202005-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2020_06 <- read_delim("202006-divvy-tripdata/202006-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2020_07 <- read_delim("202007-divvy-tripdata/202007-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2020_08 <- read_delim("202008-divvy-tripdata/202008-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2020_09 <- read_delim("202009-divvy-tripdata/202009-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2020_10 <- read_delim("202010-divvy-tripdata/202010-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2020_11 <- read_delim("202011-divvy-tripdata/202011-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2020_12 <- read_delim("202012-divvy-tripdata/202012-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2021_01 <- read_delim("202101-divvy-tripdata/202101-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2021_02 <- read_delim("202102-divvy-tripdata/202102-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)
data_2021_03 <- read_delim("202103-divvy-tripdata/202103-divvy-tripdata.csv", delim = ",", escape_double = FALSE, trim_ws = TRUE)

```

## Process

Perform some data transformations for more consistency. And merge all data into one data frame name.**merged_data**
```{r , message=FALSE, warning=FALSE, paged.print=FALSE}
library(tidyverse)

```

```{r trans, message=FALSE, warning=FALSE, paged.print=FALSE}
data_2020_04_11_dou <- bind_rows(data_2020_05,data_2020_06,data_2020_07,data_2020_08,data_2020_09,data_2020_10,data_2020_11)
data_2020_04_11_char <- mutate(data_2020_04_11_dou, start_station_id = as.character(start_station_id),end_station_id = as.character(end_station_id))
merged_data <- bind_rows(data_2020_04_11_char,data_2020_12,data_2021_01,data_2021_02,data_2021_03)

```

#### Summarize the data

```{r echo=TRUE, message=FALSE, warning=FALSE, paged.print=FALSE}
summary(merged_data)
```

##Data cleaning

calculate the difference between the starting station and the destination station
```{r message=FALSE, warning=FALSE, paged.print=FALSE}
merged_data$ride_length <- difftime(merged_data$ended_at,merged_data$started_at)

```

Delete blank rows in the data
```{r}
merged_data_clean <- drop_na(merged_data)

```

I split the started_at column to retrieve the *dates* , the *months*, the *years*, the *Week days*, and the *hours*
```{r message=FALSE, warning=FALSE, paged.print=FALSE}
merged_data_clean1 <- transform(merged_data_clean, dates_ = format(started_at, "%d"), 
          months_ = format(started_at, "%m"), years_ = format(started_at, "%Y"), 
          Weekdays_ = format(started_at, "%A"))
merged_data_clean1 <- transform(merged_data_clean1,hours_ = format(started_at, "%H"))
```

In order to **remove inconsistent values**, i create a new data frame without records that have ride length *<= zero minute OR > 24 h* 

```{r message=FALSE, warning=FALSE, paged.print=FALSE}
merged_data_clean1 <- merged_data_clean1[!(merged_data_clean1$ride_length <= 30 | merged_data_clean1$ride_length > 86400),]

```

## Analysis

In the final cleaned up version, I did some analysis to show trends between certain metrics.

```{r message=FALSE, warning=FALSE, paged.print=FALSE}
ride_lenght_summarise <- merged_data_clean1 %>%  
  summarise(min_ride_lenght = min(ride_length),max_ride_lenght = max(ride_length),mean_ride_lenght = mean(ride_length),
            median_ride_lenght = median(ride_length) )


member_casual_mean_ride_length <- aggregate(merged_data_clean1$ride_length ~ merged_data_clean1$member_casual, FUN = mean )
member_casual_median_ride_length <- aggregate(merged_data_clean1$ride_length ~ merged_data_clean1$member_casual, FUN = median )
member_casual_min_ride_length <- aggregate(merged_data_clean1$ride_length ~ merged_data_clean1$member_casual, FUN = min )
member_casual_max_ride_length <- aggregate(merged_data_clean1$ride_length ~ merged_data_clean1$member_casual, FUN = max )


merged_data_clean1<- merged_data_clean1 %>% 
  mutate(Weekdays_=ifelse(Weekdays_=="lundi","Monday",Weekdays_),Weekdays_=ifelse(Weekdays_=="mardi","Tuesday",Weekdays_),
         Weekdays_=ifelse(Weekdays_=="mercredi","Wednesday",Weekdays_),
         Weekdays_=ifelse(Weekdays_=="jeudi","Thursday",Weekdays_), Weekdays_=ifelse(Weekdays_=="vendredi","Friday",Weekdays_),
         Weekdays_=ifelse(Weekdays_=="samedi","Saturday",Weekdays_), Weekdays_=ifelse(Weekdays_=="dimanche","Sunday",Weekdays_))


agg_member_ride_week_mean<-aggregate(merged_data_clean1$ride_length ~merged_data_clean1$member_casual + merged_data_clean1$Weekdays_, FUN =mean)


agg_member_ride_week_median <-aggregate(merged_data_clean1$ride_length ~merged_data_clean1$member_casual + merged_data_clean1$Weekdays_, FUN =median)


###

merber_casual_week_sumarise_n <- merged_data_clean1 %>% 
  group_by(member_casual, Weekdays_) %>% 
  summarise(number_of_ride = n(), .groups = 'drop') %>%
  arrange(Weekdays_)

merber_casual_month_sumarise_median <- merged_data_clean1 %>%
  group_by(member_casual, months_) %>%
  summarise(average_ride_length = median(ride_length), .groups = 'drop') %>%
  arrange(months_)

merber_casual_month_sumarise_n <- merged_data_clean1 %>%
  group_by(member_casual, months_) %>%
  summarise(number_of_ride = n(), .groups = 'drop') %>%
  arrange(months_)

merber_casual_rideable_sumarise_n <- merged_data_clean1 %>% 
  group_by(rideable_type, member_casual) %>% 
  summarise(number_of_ride = n(), .groups = 'drop')

merber_casual_rideable_sumarise_n_b <- merged_data_clean1 %>% 
  filter(rideable_type == 'docked_bike') %>% 
  group_by(member_casual, Weekdays_) %>% 
  summarise(number_of_ride= n(),.groups = 'drop') %>%
  arrange(Weekdays_)

merber_casual_start_station_sumarise_n <- merged_data_clean1 %>%
  group_by(start_station_name, member_casual) %>%
  summarise(number_of_ride = n(), .groups = 'drop') %>%
  filter(start_station_name != "", member_casual != 'member') %>%
  arrange(-number_of_ride) %>% 
  head(n=20)

member_casual_hours_summarise <- merged_data_clean1 %>% 
  group_by( member_casual,hours_) %>% 
  summarise(number_ride = n(), .groups = 'drop')


```

## Share
This phase of sharing contains some plots, explanations, and relationships that I discover.

**The main lessons we can draw from this graph are the following :**

- Casual cyclists ride more on weekends *(Saturday and Sunday).*
- Member cyclists are *more or less equally* distributed over the 7 days of the week.


```{r fig.height=8, fig.width=13}
ggplot(data = merber_casual_week_sumarise_n, aes(x= Weekdays_, y= number_of_ride, fill=member_casual ))+
  geom_bar(position = "dodge", stat = "identity")+
  facet_wrap(~member_casual)+
  scale_fill_brewer(palette="Dark2")+
  theme(axis.text.x = element_text(angle = 45))+
  labs(title = "The number of rides per day of the week for casual and members riders.")

```

**The main lessons we can draw from this graph are the following :**

- Casual cyclists ride more between *June (6) and September (9)* in term of number of ride.


```{r fig.height=8, fig.width=13}
ggplot(data = merber_casual_month_sumarise_n, aes(x=months_, y = number_of_ride, fill = member_casual))+
  geom_bar(position = "dodge", stat = "identity")+
  theme(axis.text.x = element_text(angle = 45))+
  facet_wrap(~member_casual)+
  labs(title = "The number of rides per month for casual and members riders.")
```

**The main lessons we can draw from this graph are the following :**

- Cyclists (casual and members) ride more on average(in term of **time**) between *May (5) and July (8).*
- **May** is also the month they (casual and members Cyclists) spend the most time riding.


```{r fig.height=8, fig.width=13}
ggplot(data = merber_casual_month_sumarise_median, aes(x=months_, y = average_ride_length, fill = member_casual))+
  geom_bar(position = "dodge", stat = "identity")+
  facet_wrap(~ member_casual)+
  labs(title = "The average rides (in term of time ) per month for casual and members riders.")+
  scale_fill_brewer(palette="Dark2")
```


**The main lessons we can draw from this graph are the following :**

-Casual cyclists prefer **docked bikes** to other types of bikes *(conventional and electric)*, but they prefer electric bikes slightly more than classic bikes. 

```{r fig.height=8, fig.width=13}
ggplot(data = merber_casual_rideable_sumarise_n, aes(x=rideable_type, y = number_of_ride, fill = member_casual))+
  geom_bar(position = "dodge", stat = "identity")+
  labs(title = "The average rides (in term of time ) per month for casual and members riders.")
```

**The main lessons we can draw from this graph are the following :**

- The 20 most popular stations for casual cyclists.
```{r fig.height=8, fig.width=13}
ggplot(data = merber_casual_start_station_sumarise_n, aes(x=start_station_name, y = number_of_ride, fill = member_casual))+
  geom_bar(position = "dodge", stat = "identity")+
  theme(axis.text.x = element_text(angle = 45))+
  labs(title = "The 20 most popular stations for casual cyclists.")
```

**The main lessons we can draw from this graph are the following :**

- For casual cyclists, from *4 a.m. to 5 p.m.*, the number of rides increases steadily, and after *5 p.m.* it decreases until 3 a.m.
- The hours where there is a lot of rides are between 13 and 18 .

```{r fig.height=8, fig.width=13}
ggplot(data=member_casual_hours_summarise, aes(x=hours_, y= number_ride, fill= member_casual))+
  geom_bar(position = 'dodge', stat = 'identity')+
  facet_wrap(~member_casual)+ theme(axis.text.x = element_text(angle = 45) )+
  scale_fill_brewer(palette="Dark2")+
  labs(title = "The number rides per hours for casual and members riders.")
```

# Act 

Based on the various conclusions below, here are our recommendations:

## My recommendation
- Launch a limited annual membership discount program during the months of June through September on weekends.Because it's during this time that we can reach the most people.

- Experiment with marketing strategies in the 20 stations with the highest number of casual users, or during peak periods. 

- Gather more data, with much more detail, to make more accurate decisions.


### NB

This project was for the **Google professional data analyst ** certificate, and it was my first data analysis and I really enjoyed it.


